apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def configValue = { id ->
    return new XmlParser()
        .parse(file("${rootProject.projectDir.path}/app/src/main/res/values/config.xml"))
        .string.find { it.@name.equals id }.text()
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    defaultConfig {
        applicationId "com.draco.ludere.${configValue('config_id')}"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName '1.0'
        resConfigs 'en'
    }

    signingConfigs {
        release {
            storeFile file("${rootProject.projectDir}/ludere.jks")
            storePassword 'ludere'
            keyAlias 'key0'
            keyPassword 'ludere'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

task prepareCore {
    delete "${rootProject.projectDir}/app/src/main/jniLibs"
    for (abi in [ 'armeabi-v7a', 'arm64-v8a']) {
        file("${rootProject.projectDir}/app/src/main/jniLibs/$abi").mkdirs()
        download {
            src "https://buildbot.libretro.com/nightly/android/latest/$abi/${configValue('config_core')}_libretro_android.so.zip"
            dest "${rootProject.projectDir}/app/src/main/jniLibs/$abi"
        }
        copy {
            from zipTree("${rootProject.projectDir}/app/src/main/jniLibs/$abi/${configValue('config_core')}_libretro_android.so.zip")
            into "${rootProject.projectDir}/app/src/main/jniLibs/$abi"
            rename "${configValue('config_core')}_libretro_android.so", "libcore.so"
        }
        delete {
            delete "${rootProject.projectDir}/app/src/main/jniLibs/$abi/${configValue('config_core')}_libretro_android.so.zip"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'org.apache.commons:commons-compress:1.20'
    implementation 'com.github.swordfish90:radialgamepad:0.1.1'
    implementation 'com.github.swordfish90:libretrodroid:master-SNAPSHOT'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
}
